class DataSync{constructor(){this.apiBase='http: this.newsFile='data/news.json';}getLocalStorageData(){try{const data=localStorage.getItem('newsData');return data ? JSON.parse(data) : [];}catch (error){console.error('ローカルストレージからの読み込みエラー:',error);return [];}}async getFileData(){try{const response=await fetch(this.newsFile);if (response.ok){return await response.json();}else{console.log('JSONファイルが見つかりません');return [];}}catch (error){console.error('JSONファイル読み込みエラー:',error);return [];}}getImportedData(){try{const importedData=localStorage.getItem('importedNewsData');return importedData ? JSON.parse(importedData) : [];}catch (error){console.error('インポートデータ読み込みエラー:',error);return [];}}mergeData(localData,fileData){const merged=[...localData];fileData.forEach(fileItem=>{const exists=merged.find(localItem=> localItem.id===fileItem.id);if (!exists){merged.push(fileItem);}});return merged.sort((a,b)=>{const dateA=new Date(a.date);const dateB=new Date(b.date);return dateB-dateA;});}saveToLocalStorage(data){try{localStorage.setItem('newsData',JSON.stringify(data));console.log('ローカルストレージに保存完了:',data.length,'件');return true;}catch (error){console.error('ローカルストレージ保存エラー:',error);return false;}}saveImportedData(data){try{localStorage.setItem('importedNewsData',JSON.stringify(data));console.log('インポートデータに保存完了:',data.length,'件');return true;}catch (error){console.error('インポートデータ保存エラー:',error);return false;}}syncData(){console.log('データ同期を開始...');const localData=this.getLocalStorageData();const fileData=this.getFileData();const importedData=this.getImportedData();console.log('取得したデータ:',{local: localData.length,file: fileData.length,imported: importedData.length});let mergedData=this.mergeData(localData,fileData);mergedData=this.mergeData(mergedData,importedData);console.log('マージ後のデータ:',mergedData.length,'件');const localSuccess=this.saveToLocalStorage(mergedData);return{success: localSuccess,totalItems: mergedData.length,localSuccess};}showSyncStatus(){const localData=this.getLocalStorageData();const fileData=this.getFileData();const importedData=this.getImportedData();console.log('===データ同期状況===');console.log('ローカルストレージ:',localData.length,'件');console.log('JSONファイル:',fileData.length,'件');console.log('インポートデータ:',importedData.length,'件');const allIds=new Set();const duplicates=[];[...localData,...fileData,...importedData].forEach(item=>{if (allIds.has(item.id)){duplicates.push(item.id);}else{allIds.add(item.id);}});if (duplicates.length > 0){console.log('重複ID:',duplicates);}else{console.log('重複なし');}return{local: localData.length,file: fileData.length,imported: importedData.length,duplicates: duplicates.length};}}window.DataSync=DataSync;