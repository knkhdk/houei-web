document.addEventListener('DOMContentLoaded',function(){const form=document.getElementById('worksPostForm');if (form){form.addEventListener('submit',handleWorksSubmit);}renderWorksAdminList();});function renderWorksAdminList(){const works=JSON.parse(localStorage.getItem('works') || '[]');const container=document.getElementById('worksListContainer');if (!container) return;if (works.length===0){container.innerHTML='<p>登録された施工実績はありません。</p>';return;}container.innerHTML=works.map(work=> ` <div class="admin-work-item"> <div class="admin-work-main"> <span class="admin-work-title">${work.title}</span> <span class="admin-work-category">[${work.category}]</span> <span class="admin-work-year">${work.year}年</span> <span class="admin-work-location">${work.location}</span> </div> <div class="admin-work-actions"> <button class="btn btn-small btn-edit" onclick="editWorkFromAdmin('${work.id}')">編集</button> <button class="btn btn-small btn-danger" onclick="deleteWorkFromAdmin('${work.id}')">削除</button> </div> </div> `).join('');}window.editWorkFromAdmin=function(id){const works=JSON.parse(localStorage.getItem('works') || '[]');const work=works.find(w=> w.id===id);if (!work) return;document.getElementById('title').value=work.title;document.getElementById('category').value=work.category;document.getElementById('location').value=work.location;document.getElementById('description').value=work.description;document.getElementById('year').value=work.year;const details=work.details ||{};const keys=Object.keys(details);for (let i=1;i <=4;i++){document.querySelector(`[name=detail${i}_key]`).value=keys[i-1] || '';document.querySelector(`[name=detail${i}_value]`).value=keys[i-1] ? details[keys[i-1]] : '';}form.setAttribute('data-edit-id',id);showMessage('編集モードになりました。修正後「投稿する」で上書き保存されます。','info');}window.deleteWorkFromAdmin=function(id){if (!confirm('この施工実績を削除しますか？')) return;let works=JSON.parse(localStorage.getItem('works') || '[]');works=works.filter(w=> w.id !==id);localStorage.setItem('works',JSON.stringify(works));renderWorksAdminList();showMessage('施工実績を削除しました','success');}function handleWorksSubmit(e){e.preventDefault();const formData=new FormData(e.target);const editId=e.target.getAttribute('data-edit-id');let works=JSON.parse(localStorage.getItem('works') || '[]');let workData={id: editId || generateId(),title: formData.get('title'),category: formData.get('category'),location: formData.get('location'),description: formData.get('description'),year: parseInt(formData.get('year')),image: formData.get('image') ? 'works/'+formData.get('image').name : 'works/placeholder.jpg',details:{},createdAt: editId ? (works.find(w=> w.id===editId)?.createdAt || new Date().toISOString()) : new Date().toISOString()};for (let i=1;i <=4;i++){const key=formData.get(`detail${i}_key`);const value=formData.get(`detail${i}_value`);if (key && value){workData.details[key]=value;}}if (editId){works=works.map(w=> w.id===editId ? workData : w);showMessage('施工実績を更新しました','success');e.target.removeAttribute('data-edit-id');}else{works.unshift(workData);showMessage('施工実績が正常に投稿されました。','success');}localStorage.setItem('works',JSON.stringify(works));renderWorksAdminList();e.target.reset();setTimeout(()=>{window.location.href='index.html';},1500);}function previewWork(){const form=document.getElementById('worksPostForm');const formData=new FormData(form);const previewData={title: formData.get('title') || '工事名が入力されていません',category: formData.get('category') || 'カテゴリが選択されていません',location: formData.get('location') || '施工場所が入力されていません',description: formData.get('description') || '工事概要が入力されていません',year: formData.get('year') || '施工年が入力されていません',details:{}};for (let i=1;i <=4;i++){const key=formData.get(`detail${i}_key`);const value=formData.get(`detail${i}_value`);if (key && value){previewData.details[key]=value;}}const previewHTML=generateWorksPreviewHTML(previewData);const previewContainer=document.getElementById('previewContainer');const previewContent=document.getElementById('previewContent');previewContent.innerHTML=previewHTML;previewContainer.style.display='block';previewContainer.scrollIntoView({behavior: 'smooth'});}function generateWorksPreviewHTML(data){let detailsHTML='';for (const [key,value] of Object.entries(data.details)){detailsHTML+=`<div class="detail-item"><strong>${key}:</strong> ${value}</div>`;}return ` <div class="works-card preview-card"> <div class="works-card-image"> <img src="../images/works/placeholder.jpg" alt="${data.title}"> </div> <div class="works-card-content"> <div class="works-card-header"> <h3>${data.title}</h3> <span class="works-category">${data.category}</span> </div> <div class="works-card-info"> <p><strong>施工場所:</strong> ${data.location}</p> <p><strong>施工年:</strong> ${data.year}</p> </div> <div class="works-card-description"> <p>${data.description}</p> </div> ${detailsHTML ? `<div class="works-card-details">${detailsHTML}</div>` : ''}</div> </div> `;}function generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2);}function showMessage(message,type='info'){const existingMessage=document.querySelector('.message');if (existingMessage){existingMessage.remove();}const messageDiv=document.createElement('div');messageDiv.className=`message message-${type}`;messageDiv.textContent=message;messageDiv.style.cssText=` position: fixed;top: 20px;right: 20px;padding: 15px 20px;border-radius: 5px;color: white;font-weight: 500;z-index: 1000;max-width: 300px;box-shadow: 0 4px 12px rgba(0,0,0,0.15);`;if (type==='success'){messageDiv.style.backgroundColor='#4CAF50';}else if (type==='error'){messageDiv.style.backgroundColor='#f44336';}else{messageDiv.style.backgroundColor='#2196F3';}document.body.appendChild(messageDiv);setTimeout(()=>{if (messageDiv.parentNode){messageDiv.remove();}},3000);}