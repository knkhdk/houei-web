class LocalFileServer{constructor(){this.server=null;this.port=8080;this.isRunning=false;}async startServer(){if (this.isRunning){console.log('サーバーは既に起動しています');return true;}try{const http=require('http');const fs=require('fs');const path=require('path');this.server=http.createServer((req,res)=>{res.setHeader('Access-Control-Allow-Origin','*');res.setHeader('Access-Control-Allow-Methods','GET,POST,PUT,DELETE,OPTIONS');res.setHeader('Access-Control-Allow-Headers','Content-Type');if (req.method==='OPTIONS'){res.writeHead(200);res.end();return;}let filePath=req.url;if (filePath==='/'){filePath='/index.html';}if (filePath==='/api/news' && req.method==='GET'){this.handleGetNews(req,res);return;}if (filePath==='/api/news' && req.method==='POST'){this.handlePostNews(req,res);return;}const fullPath=path.join(__dirname,'..',filePath);fs.readFile(fullPath,(err,data)=>{if (err){res.writeHead(404);res.end('File not found');return;}const ext=path.extname(fullPath);const contentType=this.getContentType(ext);res.setHeader('Content-Type',contentType);res.writeHead(200);res.end(data);});});this.server.listen(this.port,()=>{console.log(`ローカルサーバーが起動しました: http: this.isRunning=true;this.openBrowser();});return true;}catch (error){console.error('サーバー起動エラー:',error);return false;}}handleGetNews(req,res){const fs=require('fs');const path=require('path');const newsPath=path.join(__dirname,'..','data','news.json');fs.readFile(newsPath,'utf8',(err,data)=>{if (err){res.writeHead(404);res.end(JSON.stringify([]));return;}res.setHeader('Content-Type','application/json');res.writeHead(200);res.end(data);});}handlePostNews(req,res){let body='';req.on('data',chunk=>{body+=chunk.toString();});req.on('end',()=>{try{const fs=require('fs');const path=require('path');const newsPath=path.join(__dirname,'..','data','news.json');const newsData=JSON.parse(body);const backupPath=path.join(__dirname,'..','data',`news-backup-${Date.now()}.json`);if (fs.existsSync(newsPath)){fs.copyFileSync(newsPath,backupPath);}fs.writeFileSync(newsPath,JSON.stringify(newsData,null,2));res.setHeader('Content-Type','application/json');res.writeHead(200);res.end(JSON.stringify({success: true,message: 'データを保存しました'}));}catch (error){console.error('データ保存エラー:',error);res.writeHead(500);res.end(JSON.stringify({success: false,message: '保存に失敗しました'}));}});}getContentType(ext){const types={'.html': 'text/html','.css': 'text/css','.js': 'application/javascript','.json': 'application/json','.png': 'image/png','.jpg': 'image/jpeg','.jpeg': 'image/jpeg','.gif': 'image/gif','.ico': 'image/x-icon'};return types[ext] || 'text/plain';}openBrowser(){const{exec}=require('child_process');const url=`http: exec(`start ${url}`,(error)=>{if (error){console.log('ブラウザの自動起動に失敗しました。手動で以下のURLを開いてください:');console.log(url);}});}stopServer(){if (this.server){this.server.close(()=>{console.log('サーバーを停止しました');this.isRunning=false;});}}}window.LocalFileServer=LocalFileServer;